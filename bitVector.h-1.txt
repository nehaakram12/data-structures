#pragma once
#include <iostream>
#include <conio.h>
using namespace std;

class bitVector
{
	unsigned char* bytes;
	unsigned int n;
public:
	bitVector()
	{
		n = 7280000;
		int size = ceil(n / 8);
		bytes = new unsigned char[size] {};
		for (int i = 0; i < size; i++)
		{
			bytes[i] = 0;
		}
	}
	bitVector(int bitno)
	{
		n = bitno;
		int size = ceil(n / 8);
		bytes = new unsigned char[size] {};
	}
	void set(int k)
	{
		int byteno = k / 8;
		int bitno = k % 8;
		unsigned char mask = 0x80;
		mask = mask >> bitno;
		bytes[byteno] = bytes[byteno] | (mask);
	}
	bool get(int k)
	{
		int byteno = k / 8;
		int bitno = k % 8;
		unsigned char mask = 0x80;
		mask = mask >> bitno;
		return(mask&bytes[byteno]);
	}

};